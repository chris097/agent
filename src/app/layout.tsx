'use client';
import {
  Geist,
  Geist_Mono,
  Roboto,
  Montserrat,
  Poppins,
} from "next/font/google";
import "./globals.css";
import { usePathname } from "next/navigation";
import WithSidebarLayout from "@/layouts/withSidebar";
import WithoutSidebarLayout from "@/layouts/withoutSidebar";

// âœ… Register fonts as CSS variables
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
  weight: ["100", "300", "400", "500", "700", "900"],
});

const montserrat = Montserrat({
  variable: "--font-montserrat",
  subsets: ["latin"],
  weight: ["100", "300", "400", "500", "600", "700", "800", "900"],
});

const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {

  const noSidebarRoutes = [
    '/login',
    '/',
    '/reset-password',
    '/forgot-password',
    '/discovery',
    '/register',
    '/not-found'
  ];

  const currentPath = usePathname();

  // Modify the logic to include dynamic password-reset and login/confirm routes with any alphanumeric string
  const showSidebar = !noSidebarRoutes.includes(currentPath) &&
    !/^\/confirm-email\/[^/]+$/.test(currentPath) &&
    !/^\/create-account\/[^/]+$/.test(currentPath) &&
    !/^\/reset-password\/[^/]+$/.test(currentPath) &&
    !/^\/property\/[^/]+$/.test(currentPath)

  return (
    <html lang="en">
      <body
        className={`
          ${geistSans.variable} 
          ${geistMono.variable} 
          ${roboto.variable} 
          ${montserrat.variable} 
          ${poppins.variable} 
          antialiased
        `}
      >
        {showSidebar ? (
          <WithSidebarLayout>
            {children}
          </WithSidebarLayout>
        ) : (
          <WithoutSidebarLayout>
            {children}
          </WithoutSidebarLayout>
        )}
      </body>
    </html>
  );
};